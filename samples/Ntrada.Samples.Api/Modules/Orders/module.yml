name: Orders
path: /orders

routes:
- upstream: /
  method: GET
  use: downstream
  downstream: orders-service/orders?customerId=@user_id
  on_success:
    data: response.data.items
  
- upstream: /{id:guid}
  method: GET
  use: downstream
  downstream: orders-service/customers/@user_id/orders/{id}
  
- upstream: /
  method: POST
  use: message_broker
  config:
    exchange: orders.create_order
    routing_key: create_order
  bind:
  - customerId:@user_id
  payload: create_order
  schema: create_order.schema
  
- upstream: /{id:guid}/complete
  method: POST
  use: message_broker
  config:
    exchange: orders.complete_order
    routing_key: complete_order
  bind:
  - id:{id}
  - customerId:@user_id
  payload: complete_order
  schema: complete_order.schema
  
- upstream: /{id:guid}/approve
  method: POST
  use: message_broker
  config:
    exchange: orders.approve_order
    routing_key: approve_order
  bind:
  - id:{id}
  payload: approve_order
  schema: approve_order.schema
  claims:
    role: admin
    
- upstream: /{id:guid}
  method: DELETE
  use: message_broker
  config:
    exchange: orders.cancel_order
    routing_key: cancel_order
  bind:
  - id:{id}
  - customerId:@user_id
  payload: cancel_order
  schema: cancel_order.schema

services:
  orders-service:
    local_url: localhost:5005
    url: load_balancer/orders-service